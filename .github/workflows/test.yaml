name: Tests

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  tests:
    strategy:
      fail-fast: false
      matrix:
        runtime:
          - 'DEVICE=CLANG'
          - 'DEVICE=WEBGPU'
          - 'DEVICE=WEBGPU WGPU=1'
          - 'DEVICE=WASM TINY_DEVICE=CLANG'

    name: Test ${{ matrix.runtime }}
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - uses: actions/setup-node@v4
        with:
          node-version: '22'
      - run: npm i 

      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install WebGPU deps
        run: |
          sudo curl -L https://github.com/wpmed92/pydawn/releases/download/v0.1.6/libwebgpu_dawn.so -o /usr/local/lib/libwebgpu_dawn.so
          mkdir -p $HOME/.cache/jsgrad
          cp /usr/local/lib/libwebgpu_dawn.so $HOME/.cache/jsgrad/libwebgpu_dawn.so
          sudo apt update -y || true
          sudo apt install -y libegl1-mesa libgl1-mesa-dri libxcb-xfixes0-dev mesa-vulkan-drivers

      - name: Run tests
        run: TQDM=0 CACHE_DB=":memory:" ${{ matrix.runtime }} npm run test

      - name: Train mnist
        if: "!contains(matrix.runtime, 'DEVICE=WEBGPU')" # Buffer binding 1 range 737280000 exceeds `max_*_buffer_binding_size` limit 134217728
        run: TQDM=0 CACHE_DB=":memory:" ${{ matrix.runtime }} node --experimental-transform-types cli/mnist.ts --steps 10 --bs 2
  envs:
    strategy:
      fail-fast: false
      matrix:
        env: ['deno -A', 'node --experimental-transform-types', 'bun -b', './cli/chrome.ts']
    name: Env (${{ matrix.env }})
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Install WebGPU deps
        run: sudo apt update -y && sudo apt install -y libegl1-mesa libgl1-mesa-dri libxcb-xfixes0-dev mesa-vulkan-drivers

      - uses: denoland/setup-deno@v2
        if: matrix.env == 'deno -A' 

      - uses: actions/setup-node@v4
        if: matrix.env == 'node --experimental-transform-types' || matrix.env == './cli/chrome.ts'
        with:
          node-version: '22'
      - run: npm i ffi-rs
        if: matrix.env == 'node --experimental-transform-types'

      - uses: oven-sh/setup-bun@v2
        if: matrix.env == 'bun -b'

      - run: deno -A npm:playwright install
        if: matrix.env == './cli/chrome.ts'

      - name: Test
        run: TQDM=0 ${{ matrix.env }} cli/devices.ts
